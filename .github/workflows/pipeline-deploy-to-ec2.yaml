# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    paths:
    - 'app/**'
    branches: [ main ]
  
  pull_request:
    paths:
    - 'app/**'
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # This likely specifies a strategy or set of rules for performing a particular task or operation. It defines how a specific task should be executed.
    strategy:      
      matrix:        
        node-version: [18.17.1]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:      
      # Use the node version specified in the strategy    
      - name: Use Node.js ${{ matrix.node-version }}      
        uses: actions/setup-node@v1      
        with:        
          node-version: ${{ matrix.node-version }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git checkout
        uses: actions/checkout@v2

      # Install packages
      - name: Install packages
        run: |
          npm install --prefix ./

      # Build an optimized production build
      - name: Production build      
        run: |        
          npm run build

      # Deploy the built app to the EC2 server
      - name: Deploy to EC2
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem -r ./.next ec2-user@$EC2_IP:~/
          scp -o StrictHostKeyChecking=no -i private_key.pem  ./package.json ec2-user@$EC2_IP:~/
          ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@$EC2_IP 'cd ~/ && (pm2 list | grep online > /dev/null && sudo pm2 stop all || echo "No processes to stop") && sudo npm install && sudo pm2 start npm --name hmi-creator -- start'
          rm -f private_key.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_IP: ${{ secrets.EC2_IP_ADDRESS }}